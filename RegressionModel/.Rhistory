summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cor(fit$residuals, galton$parent)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
play()
?est
View(est)
nxt()
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes, varEst))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag + dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
lm(gch_nor ~ gpa_nor)
lnor <- lm(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for(i in c(0.3, 1.077, 0.0025, 0.1471))
{
ans <- sum(w*(x-i)^2)
print(ans)
}
rm(list = ls)
ls
ls()
a= ls()
rm(list = a)
x<-c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
x*w
x - 1
ls
for(i in c(0.3, 1.077, 0.0025, 0.1471))
{
ans <- sum(w*(x-i)^2)
print(ans)
}
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fits <- lm(y ~ x)
summary(fits)
fits$coefficients
data("mtcars")
fits <- lm(mpg ~ wt, mtcars)
summary(fits)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mx <- mean(x)
ms <- sd(x)
x[1]
(x[1] - mx[1])/ms[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fits <- lm(y ~ x)
fits$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
for(i in c(0.3, 1.077, 0.0025, 0.1471))
{
ans <- sum(w*(x-i)^2)
print(ans)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for(i in c(0.3, 1.077, 0.0025, 0.1471))
{
ans <- sum(w*(x-i)^2)
print(ans)
}
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fits <- lm(y ~ x)
summary(fits)
data("mtcars")
fits <- lm(mpg ~ wt, mtcars)
summary(fits)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fits <- lm(y ~ x-1)
summary(fits)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
fit <- lm(y ~ x);
library(UsingR); data(diamond)
library(ggplot2)
data("diamond")
rm(list = ls())
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x);
newx = data.frame(x = seq(min(x), max(x), length = 100))
?predict
rm(list = ls())
library(ggplot2)
library(UsingR)
library(manipulate)
ls
ls()
ls
install.packages(GGally)
install.packages("GGally")
install.packages("GGally")
library(ggplot2)
install.packages("GGally")
install.packages("GGally")
library(ggplot2)
install.packages("GGally")
install.packages(c("acepack", "assertthat", "BH", "car", "caret", "chron", "colorspace", "crayon", "curl", "data.table", "DBI", "digest", "dplyr", "evaluate", "foreach", "formatR", "ggplot2", "gridExtra", "highr", "HistData", "Hmisc", "htmltools", "httr", "iterators", "jsonlite", "kernlab", "knitr", "latticeExtra", "lazyeval", "lme4", "lubridate", "markdown", "memoise", "mime", "munsell", "packrat", "pbkrtest", "plyr", "proto", "quantmod", "quantreg", "R6", "RcppEigen", "RCurl", "reshape2", "rJava", "rmarkdown", "RMySQL", "rsconnect", "RSQLite", "rstudioapi", "SparseM", "stringi", "stringr", "swirl", "testthat", "tidyr", "TTR", "XML", "yaml", "zoo"))
install.packages("GGally")
require(datasets)
datasets(InsectSprays)
data("InsectSprays")
summary(InsectSprays)
?head
InsectSprays$spray
InsectSprays[InsectSprays$spray]
InsectSprays[InsectSpray$spray == "B"]
InsectsSprays[InsectSpray$spray == "B"]
InsectsSpray[InsectSpray$spray == "B"]
InsectSprays[InsectSprays$spray == "B"]
InsectSprays
InsectSprays[InsectSprays$spray == "A", ]
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
library(rgl)
plot3d(x1, x2, y)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
plot(fit)
?par
?par
x <- c(10, rnorm(n)); y <- c(10, c(rnorm(n)))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
plot(x, y, frame = FALSE, cex = 2, pch = 21, bg = "lightblue", col = "black")
abline(lm(y ~ x))
?hatvalues
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
View(splineTerms)
rm(list = ls())
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
(x > knot) * (x - knot)
(x > knots)
x - knots
View(splineTerms)
View(splineTerms)
max(x)
max(knots)
x[25]
x[50]
x[51]
knots[1]/x[1]
knots[1]
knots[2]/x[2]
knots[20]
knots[20]/pi
1.32/pi
x[2/pi
``qq
x[2]/pi
x > knots
xknots <- x * knots
xknots[1:10]
xknots <- x > knots
View(xknots)
length(xknots = TRUE)
xknots = TRUE
xknots <- x > knots
View(splineTerms)
xMat <- cbind(1, x, splineTerms)
View(xMat)
xtry <- c(1:5)
xtry <- seq(0, 5)
xtry <- seq(0, 5, length = 10)
knotstry <- seq(0, 10, length = 5)
xtry > knotstry
(xtry > knotstry) * (x- knotstry)
(xtry > knotstry) * (xtry- knotstry)
(xtry > knotstry) * (x- knotstry)
(xtry > knotstry) * (xtry- knotstry)
a <- (x > knots) * (x -knots)
?sapply
sapply(knotstry, function(knotstry) (xtry > knotstry) * (xtry - knotstry))
xtry -knotstry
sapply(knotstry, function(knot) (xtry > knot) * (xtry - knot))
xtry -knotstry
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
(xtry > knot) * (xtry - knot)
sapply(knotstry, function(knot) (xtry > knot) * (xtry - knot))
(xtry > knotstry) * (xtry - knotstry)
xtry
knotstry
?sapply
apply(knotstry, function(knot) (xtry > knot) * (xtry - knot))
lpply(knotstry, function(knot) (xtry > knot) * (xtry - knot))
lapply(knotstry, function(knot) (xtry > knot) * (xtry - knot))
rm(list = ls())
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
fit1 <- lm(y ~ xMat - 1)
coef(fit1)
fit1$coefficients
summary(fit1)
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
View(xMat)
knots <- seq(0, 4*pi, length = 10)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
knots1 <- seq(0, 4*pi, length = 10)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
splineTerms1 <- sapply(knots1, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
xMat1 <- cbind(1, x, splineTerms1)
yhat <- predict(lm(y ~ xMat - 1))
yhat1 <-predict(lm(y ~ xMat1 - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
lines(x, yhat1, col = "grey", lwd = 2)
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat1, col = "grey", lwd = 2)
lines(x, yhat, col = "red", lwd = 2)
lines(x, yhat1, col = "yellow", lwd = 2)
setwd("~/Documents/DataScienceCoursera/RegressionModel")
library(MASS)
data("shuttle")
rm(list = ls())
library(MASS)
data("shuttle")
?shuttle
data(mtcar)
library(mtcar)
data(shuttle)
shuttle
head(shuttle)
fit1 <- glm(use ~ wind, data = shuttle,  family = "binomial")
fit1 <- glm(use ~ factor(wind) - 1, data = shuttle,  family = "binomial")
summary(fit1)
fit1$usebin <- as.numeric(fit1$use == "auto")
fit1 <- glm(usebin ~ factor(wind) - 1, data = shuttle,  family = "binomial")
summary(fit1)
shuttle$usebin <- as.numeric(fit1$use == "auto")
fit1 <- glm(usebin ~ factor(wind) - 1, data = shuttle,  family = "binomial")
summary(fit1)
shuttle$usebin <- as.numeric(shuttle$use == "auto")
fit1 <- glm(usebin ~ factor(wind) - 1, data = shuttle,  family = "binomial")
summary(fit1)
fit1 <- glm(usebin ~ factor(wind), data = shuttle,  family = "binomial")
summary(fit1)
exp(coef(fit1))
shuttle$windbin <- as.numeric(shuttle$use == "head")
fit1 <- glm(usebin ~ windbin, data = shuttle,  family = "binomial")
summary(fit1)
exp(coef(fit1))
shuttle$windbin <- as.numeric(shuttle$wind == "head")
fit1 <- glm(usebin ~ windbin, data = shuttle,  family = "binomial")
summary(fit1)
exp(coef(fit1))
fit2 <- glm(usebin ~ windbin + factor(mgnm), data = shuttle,  family = "binomial")
summary(fit2)
fit2 <- glm(usebin ~ windbin + factor(magn), data = shuttle,  family = "binomial")
summary(fit2)
exp(coef(fit2))
summary(fit3)
fit3<- glm(1-usebin ~ windbin, data = shuttle,  family = "binomial")
summary(fit3)
summary(fit1)
data("InsectSprays")
data(InsectSprays)
str(InsectSprays)
data(InsectSprays)
fit4 <- glm(count ~ factor(spray) - 1, data = InsectSprays, family = "Poisson")
summary(fit4)
fit4 <- glm(count ~ factor(spray) - 1, data = InsectSprays, family = "poisson")
summary(fit4)
coef(fit4)[1, 1]/ coef(fit4)[2, 1]
coef(fit4)
coef(fit4)[1]/ coef(fit4)[2]
exp(coef(fit4)[1])/ exp(coef(fit4)[2])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- c(0)
splineturm <- sapply(knot, function(knot)(x > knot) * (x - knot))
xmat <- c(1, x, splineterm)
splineterm <- sapply(knot, function(knot)(x > knot) * (x - knot))
xmat <- c(1, x, splineterm)
fit6 <- glm(y~xmat - 1)
rm(list = ls())
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- c(0)
splineterm <- sapply(knot, function(knot)(x > knot) * (x - knot))
xmat <- c(1, x, splineterm)
xmat <- cbind(1, x, splineterm)
fit6 <- glm(y~xmat - 1)
summary(fit6)
fit6 <- glm(y~xmat)
summary(fit6)
- 1
fit6 <- glm(y~xmat - 1)
summary(fit6)
?mtcar
?mtcars
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data("mtcars")
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ wt)
g<- g + geom_point()
g
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ cyl)
g<- g + geom_point()
g
mtcars$cyl <- factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am)
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ cyl)
g<- g + geom_point()
g
?mtcars
g<- g + geom_point(aes(color = cyl))
g
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = cyl)) + labs(title = "MPG v.s Auto/Manual") + labs(x = "Auto Tramssion = 0, Manual Transmission = 1", y = "Nocturnal Symptoms")
g
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Auto/Manual") + labs(x = "Auto Tramssion = 0, Manual Transmission = 1", y = "Nocturnal Symptoms")
g
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars, col = green)
boxplot(mpg ~ am, data = mtcars, col = "green")
g<-ggplot(data = mtcars, aes(wt, mpg))
#g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Weight") + labs(x = "Weight (1000lbs) ", y = "MPG")
g
g<-ggplot(data = mtcars, aes(wt, mpg))
#g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Weight") + labs(x = "Weight (1000lbs) ", y = "MPG")
g
mtcars$mpg[mtcars$am == 0]
View(mtcars)
MM_weight<- mtcars$mpg[mtcars$am == 1]
AM_weight<- mtcars$mpg[mtcars$am == 0]
g<- g+ abline(mean(AM_weight), color = "red")
g<- g+ geom_abline(mean(AM_weight), color = "red")
g<- g+ geom_abline(aes(mean(AM_weight)), color = "red")
g
g<- g+ geom_hline(intercept = mean(AM_weight))
g
g<- g+ geom_hline(intercept = mean(AM_weight))
g<- g+ geom_abline(intercept = mean(AM_weight))
g]
g
g<- g+ geom_abline(yintercept = mean(AM_weight))
g<- geom_hline(yintercept=mean(AM_weight))
g
g
g<-ggplot(data = mtcars, aes(wt, mpg))
#g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Weight") + labs(x = "Weight (1000lbs) ", y = "MPG")
g
AM_weight<- mtcars$mpg[mtcars$am == 0]
MM_weight<- mtcars$mpg[mtcars$am == 1]
g<- g+ geom_hline(yintercept=mean(AM_weight))
g
g<- g+ geom_hline(yintercept=mean(AM_weight), color = "red")
g
g<- g+ geom_hline(yintercept=mean(AM_weight), color = "orange")
g
g<- g+ geom_hline(yintercept=mean(AM_weight), color = "red")
g
g<- g+ geom_hline(yintercept = mean(MM_weight), color = "blue")
g
g<-ggplot(data = mtcars, aes(disp, mpg))
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Weight") + labs(x = "Weight (1000lbs) ", y = "MPG")
AM_weight<- mtcars$mpg[mtcars$am == 0]
g
View(mtcars)
g<-ggplot(data = mtcars, aes(am, mpg))
g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Auto/Manual") + labs(x = "Auto Tramssion = 0, Manual Transmission = 1", y = "MPG")
g
g<-ggplot(data = mtcars, aes(wt, mpg))
#g<- g + facet_grid(.~ cyl)
g<- g + geom_point(aes(color = am)) + labs(title = "MPG v.s Weight") + labs(x = "Weight (1000lbs) ", y = "MPG")
AM_weight<- mtcars$mpg[mtcars$am == 0]
MM_weight<- mtcars$mpg[mtcars$am == 1]
g<- g+ geom_hline(yintercept=mean(AM_weight), color = "red")
g<- g+ geom_hline(yintercept = mean(MM_weight), color = "blue")
g
boxplot(mpg ~ am, data = mtcars, col = "green", title = "Boxplot")
title("Boxplot")
boxplot(mpg ~ am, data = mtcars, col = "green", main = "Boxplot")
fit1 <- lm(mpg ~., data = mtcars)
summary(fit1)$coef
fit1 <- lm(mpg ~ am, data = mtcars)
summary(fit1)$coef
summary(fit1)
summary(fit1)
fit1 <- lm(mpg ~ am -1 , data = mtcars)
summary(fit1)
fit1 <- lm(mpg ~ am, data = mtcars)
summary(fit1)
plot(fit1)
fit1 <- lm(mpg ~ am, data = mtcars)
summary(fit1)
fit2 <- lm(mpg ~ am + wt+ cyl, mtcars)
summary(fit2)
fit3 <- lm(mpg ~ am + wt+ cyl+ am*wt, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ cyl+ am*wt + am*cyl, mtcars)
summary(fit3)
fit2 <- lm(mpg ~ am + wt, mtcars)
summary(fit2)
fit3 <- lm(mpg ~ am + wt+ am*wt, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl, mtcars)
summary(fit3)
View(mtcars)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl - 1, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + factor(cyl), mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl, mtcars)
summary(fit3)
fit2 <- lm(mpg ~ am + wt, mtcars)
summary(fit2)
fit2 <- lm(mpg ~ am + wt +cyl, mtcars)
summary(fit2)
fit4<- lm(mpg ~ cyl, mtcars)
summary(fit4)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am +  cyl, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am +  cyl - 1, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + cyl, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt, mtcars)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + factor(cyl), mtcars)
summary(fit3)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- as.factor(mtcars$am)
fit2 <- lm(mpg ~ am + wt +cyl, mtcars)
summary(fit2)
fit2 <- lm(mpg ~ am + wt + as.numeric(cyl), mtcars)
summary(fit2)
fit2 <- lm(mpg ~ am + wt + cyl, mtcars)
summary(fit2)
anova(fit2)
anova(fit3)
summary(fit2)
fit3 <- lm(mpg ~ am + wt+ am*wt + hp, mtcars)
summary(fit3)
anova(fit3)
summary(fit3)
fit3 <- lm(mpg ~ am + wt+ am*wt + qsec, mtcars)
summary(fit3)
confint(fit3)
