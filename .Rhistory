library("rpart", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
install.packages("slidify")
library(ggplot2)
installed.packages("ggplot1")
installed.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages(plyr)
install.packages("plyr")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(te)
install.packages("curl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
x<-1
x
msg<- "hello"
msg
x<- 5## comments to the e
x
print(x)
x<-1:20
x
x[2]
[]5
x<-char(5)
attributes(x)
attributes(5)
x = c(1, 2, 3)
x[1]
x(1)
attributes(x)
attributes(obj = char)
attributes(obj = x)
attributes(obj)
attributes(msg)
x<-vector("numeric", 10)
x
x<-c(1.7, "a")
x
x<-c(True, 2)
x<-c(TRUE, 2)
x
x<-c("a", TRUE)
x
x<-0:6
class(x)
as.numeric(x)
x
as.logical(x)
as.character(x)
x
x<-c("a", "b","v")
x
as
m<-1:10
m
dim(m)<-c(2,5)
m
dim(n)<-c(5,2)
dim(m)<-c(5,2)
m
x<-1:3
y<-10:12
a = cbind(x,y)
a
b = rbind(x,y)
b
x<- factor(c("yes", "yes", "no"))
x
table(x)
unclass(x)
nan(X)
nan()
x<-Nan
x <- NaN
x
x <-1
x
x <- c(1,2,NA, 10, 4)
x
is.na((x))
is.na(x)
## vector of true indicate where missing value is
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
names(x)
x <- list(a =1 , b = 2, c= 3)
x
m <-matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "n"), c("e", "f"))
m
y <- data.frame(a = 1, b = "a")
dput(y)
con <- url("http://www.hoopchina.com", "r")
x <- readLines(con)
head(x)
p(x)
body(x)
c <- matrix(1:6, 2, 3)
c
x[1,2]
c[1,2]
x <- list(aardvark = 1:5)
x
x$aardvark
x$a
y <- list(aardvark =1:3, bread = 2:4)
y$b
y$aardvark
x <- c(1, 2, NA, 3, NA, 5)
bad <- is.na(x)
bad
x[!bad]
help("complete.cases")
x <- c(1, 2, NA, 4, NA, 5)
x <- c("a", "b", NA, "d", NA, "f")
y <- c(1, 2, NA, 4, NA, 5)
y <- c(1, 2, 3, 4, NA, 5)
good <- complete.cases(x, y)
good
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
good
factor <- gl(3, 10)
length(factor)
factor(3)
library(swirl)
rm(list = ls())
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
load("~/Documents/DataScienceCoursera/.RData")
setwd("~/Documents/DataScienceCoursera")
test_data <- read.table("/UCI HAR Dataset/X_test.txt")
test_data <- read.table("/UCI\\HAR\\Dataset/X_test.txt")
test_data <- read.table("~/UCI HAR Dataset/X_test.txt")
test_data <- read.table("./UCI HAR Dataset/X_test.txt")
test_data <- read.table("./UCI HAR Dataset/test/X_test.txt")
test_data_subject <- read.table("./UCI HAR Dataset/test/y_test.txt")
test_data_subject <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/y_test.txt")
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt", sep = " ")
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt", sep = "\t")
View(test_data_bulk)
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt", sep = "\t", header = TRUE)
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt", sep = "\t")
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt")
test_data_subject <- factor(test_data_subject)
test_data_subject$V1 <- factor(test_data_subject$V1)
test_data_bulk$Subject <- test_data_subject$V1
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt")
View(test_data_subject)
test_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/X_test.txt")
test_data_activity <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/y_test.txt")
test_data_subject <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/test/subject_test.txt")
test_data_interested <- subset(test_data_bulk, select = c(v1:v3))
test_data_interested <- subset(test_data_bulk, select = c("v1":"v3"))
library(dplyr)
test_data_interested <- select(test_data_bulk, v1:v3, v6:v7)
test_data_interested <- select(test_data_bulk, c(V1:V3, V5))
View(test_data_interested)
rm(test_data_interested)
Columns_interested <- c(V1:V3)
test_data_interested <- select(test_data_bulk, c("V1":"V3", "V5"))
test_data_interested <- select(test_data_bulk, c(V1:V3, V5))
test_data_interested <- subset(test_data_bulk, select = c(V1:V3, V5))
test_data_interested <- subset(test_data_bulk, select = c(V1:V4, V5))
test_data_interested <- subset(test_data_bulk, select = c(1:4, 5))
test_data_interested <- subset(test_data_bulk, select = c(2:4, 5))
View(test_data_interested)
rm(test_data_interested)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
test_data_subject$V1 <- factor(test_data_subject$V1)
test_data_activity$V1 <- factor(test_data_activity$V1)
View(test_data_bulk)
features_info <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/features.txt")
pattern1 <- "mean"
pattern2 <- "std"
int_1 <- grep(pattern1, features_info)
features_info <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/features.txt")
View(features_info)
rm(features_info)
features_info <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/features.txt")
int_1 <- grep(pattern1, x = features_info$V2)
int1
int_1
int_2 <- grep(pattern2, x = features_info$V2)
col_interested <- c(int_1, int_2)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
col_interested
col_interested <- sort(col_interested)
train_data_bulk <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/train/X_train.txt")
train_data_activity <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/train/y_train.txt")
train_data_subject <- read.table("./Getting_Cleaning_Data_Project/UCI HAR Dataset/train/subject_train.txt")
train_data_subject$V1 <- factor(train_data_subject$V1)
train_data_activity$V1 <- factor(train_data_activity$V1)
View(train_data_bulk)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
test_interest <- select(test_data_bulk, col_interested)
train_interest <- select(train_data_bulk, col_interested)
revalue(test_data_activity, c(1 = "Walking",
2 = "Walking_Upstair",
3 = "Walking_Downstair",
4 = "Sitting",
5 = "Standing",
6 = "Laying"))
revalue(test_data_activity, c("1" = "Walking",
"2" = "Walking_Upstair",
"3" = "Walking_Downstair",
"4" = "Sitting",
"5" = "Standing",
"6" = "Laying"))
library(plyr)
library(plyr)
library(dplyr  )
revalue(test_data_activity, c("1" = "Walking",
"2" = "Walking_Upstair",
"3" = "Walking_Downstair",
"4" = "Sitting",
"5" = "Standing",
"6" = "Laying"))
revalue(test_data_activity$V1, c("1" = "Walking",
"2" = "Walking_Upstair",
"3" = "Walking_Downstair",
"4" = "Sitting",
"5" = "Standing",
"6" = "Laying"))
test_data_activity$V1 <- revalue(test_data_activity$V1, c("1" = "Walking",
"2" = "Walking_Upstair",
"3" = "Walking_Downstair",
"4" = "Sitting",
"5" = "Standing",
"6" = "Laying"))
View(test_data_activity)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(train_data_activity)
View(test_data_activity)
View(train_data_bulk)
test_interest$Subject <- test_data_subject
train_interest$Subject <- train_data_subject
test_interest$Activity <- test_data_activity
train_interest$Activity <- train_data_activity
View(test_interest)
test_interest <- test_interest[, c(2946:2947, 1:2945)]
test_interest <- test_interest[, c(80:81, 1:79)]
View(test_interest)
test_interest$Subject <- test_data_subject$V1
train_interest$Subject <- train_data_subject$V1
test_interest$Activity <- test_data_activity$V1
train_interest$Activity <- train_data_activity$V1
test_interest <- test_interest[, c(80:81, 1:79)]
train_interest <- train_interest[, c(80:81, 1:79)]
View(train_interest)
test_and_train_final <- rbind(test_interest, train_interest)
View(test_and_train_final)
View(test_interest)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(test_interest)
View(test_and_train_final)
names(test_and_train_final)
oldnames <- names(test_and_train_final)
newnames <- features_info$V2
for (i in 3:81) {
new_name <- newnames[col_interested[i-2]]
t_and_t_trail <- rename(test_and_train_final, replace = setNames(new_name, oldnames[i-2]))
}
View(t_and_t_trail)
View(test_data_bulk)
View(train_data_activity)
View(train_data_bulk)
oldnames <- names(test_and_train_final)
newnames <- features_info$V2
for (i in 3:81) {
new_name <- newnames[col_interested[i-2]]
old_name <- oldnames[i]
t_and_t_trail <- rename(test_and_train_final, replace = setNames(new_name, old_name))
}
View(t_and_t_trail)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(test_and_train_final)
oldn_name <- "V1"; new_name <- "agMean";
tst_trail <- rename_(test_and_train_final, new_name <- oldn_name)
tst_trail <- rename(test_and_train_final, replace = setNames(oldn_name, new_name))
View(tst_trail)
tst_trail <- rename(test_and_train_final, replace = setNames(V1, new_name))
View(test_and_train_final)
View(tst_trail)
tst_trail <- rename_(test_and_train_final, Try1 =V1)
tst_trail <- rename_(test_and_train_final, Try1 = V1)
tst_trail <- rename_(test_and_train_final, Try1 = v1)
str(test_and_train_final)
View(tst_trail)
tst_trail <- rename_(test_and_train_final, Try1 = V2)
class(test_and_train_final$V1)
header(test_and_train_final)
rename_(test_and_train_final, Try1 = V2)
new_name <- newnames[col_interested[i-2]]
new_name <- newnames[col_interested[3-2]]
new_name
as.character(new_name)
oldnames <- names(test_and_train_final)
newnames <- features_info$V2
for (i in 3:81) {
new_name <- as.character(newnames[col_interested[i-2]])
colnames(tst_trail)[i] <- new_name
}
View(tst_trail)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(test_and_train_final)
trial2 <- group_by(test_and_train_final, Subject)
View(test_and_train_final)
trial2 <- mutate_(test_and_train_final, Sub_Activity = c(Subject, Activity))
New_ID <- c( as.character(test_and_train_final$Subject), as.character(test_and_train_final$Activity))
New_ID
rm(New_ID)
trial2 <- mutate_(test_and_train_final, sub_ac = as.character(Subject))
trial2 <- group_by(test_and_train_final, Subject, Activity)
View(trial2)
trial3 <- summarise_each(trial2, mean())
trial3 <- summarise_each(trial2, funs = mena)
trial3 <- summarise_each(trial2, funs = mean)
trial3 <- summarise_each(tbl = trial2, funs = mean())
trial3 <- summarise_each(tbl = trial2, funs = mean)
trial3 <- summarise_each(tbl = trial2, funs = mean(x))
trial3 <- summarise_each(tbl = trial2, funs = mean(trial2))
trial3 %>% summarise_each(funs(mean))
trial2 %>% summarise_each(funs(mean))
trial3 <- trial2 %>% summarise_each(funs(mean))
View(trial3)
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(Test_Train_Tidy)
View(test_and_train_final)
for (i in 3:81) {
old_name <- names(Test_Train_Tidy)[i]
new_name <- paste("Average",old_name, sep = " " )
colnames(Test_Train_Tidy)[i] <- new_name
}
source('~/Documents/DataScienceCoursera/Getting_Cleaning_Data_Project/run_analysis.r')
View(Test_Train_Tidy)
write.table(Test_Train_Tidy, file = "./Getting_Cleaning_Data_Project/Q5_Final_Tidy_dataset.txt", row.names = FALSE)
a1 <- read.table("tt.txt", header = TRUE)
View(a1)
install.packages("rmarkdown")
names(Test_Train_Tidy)
names(test_and_train_final)
