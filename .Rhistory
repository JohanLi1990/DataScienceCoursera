library("rpart", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
install.packages("slidify")
library(ggplot2)
installed.packages("ggplot1")
installed.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages(plyr)
install.packages("plyr")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(te)
install.packages("curl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
x<-1
x
msg<- "hello"
msg
x<- 5## comments to the e
x
print(x)
x<-1:20
x
x[2]
[]5
x<-char(5)
attributes(x)
attributes(5)
x = c(1, 2, 3)
x[1]
x(1)
attributes(x)
attributes(obj = char)
attributes(obj = x)
attributes(obj)
attributes(msg)
x<-vector("numeric", 10)
x
x<-c(1.7, "a")
x
x<-c(True, 2)
x<-c(TRUE, 2)
x
x<-c("a", TRUE)
x
x<-0:6
class(x)
as.numeric(x)
x
as.logical(x)
as.character(x)
x
x<-c("a", "b","v")
x
as
m<-1:10
m
dim(m)<-c(2,5)
m
dim(n)<-c(5,2)
dim(m)<-c(5,2)
m
x<-1:3
y<-10:12
a = cbind(x,y)
a
b = rbind(x,y)
b
x<- factor(c("yes", "yes", "no"))
x
table(x)
unclass(x)
nan(X)
nan()
x<-Nan
x <- NaN
x
x <-1
x
x <- c(1,2,NA, 10, 4)
x
is.na((x))
is.na(x)
## vector of true indicate where missing value is
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
names(x)
x <- list(a =1 , b = 2, c= 3)
x
m <-matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "n"), c("e", "f"))
m
y <- data.frame(a = 1, b = "a")
dput(y)
con <- url("http://www.hoopchina.com", "r")
x <- readLines(con)
head(x)
p(x)
body(x)
c <- matrix(1:6, 2, 3)
c
x[1,2]
c[1,2]
x <- list(aardvark = 1:5)
x
x$aardvark
x$a
y <- list(aardvark =1:3, bread = 2:4)
y$b
y$aardvark
x <- c(1, 2, NA, 3, NA, 5)
bad <- is.na(x)
bad
x[!bad]
help("complete.cases")
x <- c(1, 2, NA, 4, NA, 5)
x <- c("a", "b", NA, "d", NA, "f")
y <- c(1, 2, NA, 4, NA, 5)
y <- c(1, 2, 3, 4, NA, 5)
good <- complete.cases(x, y)
good
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
good
setwd("~/Documents/DataScienceCoursera")
d1 <- numeric(5)
d1[1] <- 10
d1
d1[0]
test_name <- paste("specdata", "/", "110.csv", sep = "")
testfile <- read.csv(test_name)
mean(testfile["sulfate"])
mean(testfile[,"sulfate"])
mean(testfile[,"sulfate"], na.rm = TRUE)
for(i in 22) { print(i)}
length(d1)
for(i in 22:25) { print(i)}
for(i in 22:25) { print(i-22+1)}
source('~/Documents/DataScienceCoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 2:5)
pollutantmean("specdata", "sulfate", 2:5)
source('~/Documents/DataScienceCoursera/pollutantmean.R')
source('~/Documents/DataScienceCoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 2:5)
source('~/Documents/DataScienceCoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 2:5)
source('~/Documents/DataScienceCoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 2:5)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
array_of_means = numeric(length (id))
sum(testfile[, "sulfate"], na.rm = TRUE)
length(testfile, na.rm = TRUE)
bad <- is.na(testfile)
testfile[!bad]
goodone <- testfile[!bad]
goodone[, "sulfate"]
data1 <- testfile[, "sulfate"]
bad <- is.na(data1)
data2 <- data1[!bad]
data2[,"sulfate"]
data2
source('~/Documents/DataScienceCoursera/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
save.image("~/Documents/DataScienceCoursera/RControlWeek2_Practice.RData")
d2 <- c("a", "b", "c", "d", "e")
data.frame(d1, d2)
testDataFrame <- data.frame(d1, d2)
colnames(testDataFrame) <- c("id", "nobs")
testDataFrame
goodone <- complete.cases(testfile)
realgoodone <- testfile[goodone, ]
realgoodone
source('~/Documents/DataScienceCoursera/complete.R')
complete("specdata",1)
source('~/Documents/DataScienceCoursera/complete.R')
complete("specdata",1)
complete("specdata",1)
source('~/Documents/DataScienceCoursera/complete.R')
complete("specdata",1)
complete("specdata",c(2, 4, 8, 10, 12))
complete("specdata",c(2, 4, 8, 10, 12))
source('~/Documents/DataScienceCoursera/complete.R')
complete("specdata",c(2, 4, 8, 10, 12))
complete("specdata",1)
complete("specdata",30:25)
complete("specdata",3)
?cor
?cor
read.csv("specdata/012.csv")
TestFile <- read.csv("specdata/012.csv")
good <- complete.cases(TestFile)
RealGoodOnes <- TestFile[good, ]
cor(RealGoodOnes)
cor(RealGoodOnes[,"sulfate"], RealGoodOnes[, "nitrate"])
cr <- cor(RealGoodOnes[,"sulfate"], RealGoodOnes[, "nitrate"])
head(cr)
summary(cr)
?head
head(RealGoodOnes[,"sulfate"])
asvfile <- list.files("specdata", ".csv", full.names = TRUE)
length(asvfile)
asvfile[2]
xVal <- 1:20
good <- (xVal = 10)
good
good <- (xVal == 10)
good
good <- xVal == 10
good
xVal = 10
xVal
x <- 1:10
x[x==5]
x
x==5
good < x==5
good <- x==5
good
?next
source('~/Documents/DataScienceCoursera/corr.R')
cr <- corr("specdata", 150)
cr
source('~/Documents/DataScienceCoursera/corr.R')
cr <- corr("specdata", 150)
cr
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source('~/Documents/DataScienceCoursera/corr.R')
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
corr("specdata", 5000)
cr <-corr("specdata", 5000)
summary(cr)
source('~/Documents/DataScienceCoursera/corr.R')
cr <-corr("specdata", 5000)
summary(cr)
length(cr)
submit()
10
submit()
save.image("~/Documents/DataScienceCoursera/RControlWeek2_Practice.RData")
