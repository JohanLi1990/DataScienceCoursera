library("rpart", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
install.packages("slidify")
library(ggplot2)
installed.packages("ggplot1")
installed.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages(plyr)
install.packages("plyr")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(te)
install.packages("curl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
x<-1
x
msg<- "hello"
msg
x<- 5## comments to the e
x
print(x)
x<-1:20
x
x[2]
[]5
x<-char(5)
attributes(x)
attributes(5)
x = c(1, 2, 3)
x[1]
x(1)
attributes(x)
attributes(obj = char)
attributes(obj = x)
attributes(obj)
attributes(msg)
x<-vector("numeric", 10)
x
x<-c(1.7, "a")
x
x<-c(True, 2)
x<-c(TRUE, 2)
x
x<-c("a", TRUE)
x
x<-0:6
class(x)
as.numeric(x)
x
as.logical(x)
as.character(x)
x
x<-c("a", "b","v")
x
as
m<-1:10
m
dim(m)<-c(2,5)
m
dim(n)<-c(5,2)
dim(m)<-c(5,2)
m
x<-1:3
y<-10:12
a = cbind(x,y)
a
b = rbind(x,y)
b
x<- factor(c("yes", "yes", "no"))
x
table(x)
unclass(x)
nan(X)
nan()
x<-Nan
x <- NaN
x
x <-1
x
x <- c(1,2,NA, 10, 4)
x
is.na((x))
is.na(x)
## vector of true indicate where missing value is
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
names(x)
x <- list(a =1 , b = 2, c= 3)
x
m <-matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "n"), c("e", "f"))
m
y <- data.frame(a = 1, b = "a")
dput(y)
con <- url("http://www.hoopchina.com", "r")
x <- readLines(con)
head(x)
p(x)
body(x)
c <- matrix(1:6, 2, 3)
c
x[1,2]
c[1,2]
x <- list(aardvark = 1:5)
x
x$aardvark
x$a
y <- list(aardvark =1:3, bread = 2:4)
y$b
y$aardvark
x <- c(1, 2, NA, 3, NA, 5)
bad <- is.na(x)
bad
x[!bad]
help("complete.cases")
x <- c(1, 2, NA, 4, NA, 5)
x <- c("a", "b", NA, "d", NA, "f")
y <- c(1, 2, NA, 4, NA, 5)
y <- c(1, 2, 3, 4, NA, 5)
good <- complete.cases(x, y)
good
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
good
x<-4
class(x)
x<-c(4, TRUE)
class(X)
class(x)
x <- c(1, 3, 5)
y <-c(3,2,4)
z <- cbind(x, y)
class(z)
z
help("vector-class")
help("vector")
x <- list(2, "a", "b", TRUE)
x[1]
class(x[1])
x[[1]]
class(x[[2]])
class(x[[1]])
x <- 1:4
y < -2
y <- 2
x + y
x <- c(3, 5, 1, 10 , 12, 6)
x [x <= 5] <- 0
x
setwd("~/Documents/DataScienceCoursera")
setwd("~/Documents/DataScienceCoursera")
data1  = read.csv("hw1_data.csv")
data1
data1.header
data1.head
data1.ozone
data1[1]
data1[, 2]
data1[2,]
data1[1:2,]
length(data1)
nrow(data1)
data1[-1:-2,]
data1[-1,]
data1[152:153,]
data1[47, ]
ozone <- data1[1, ]
bad <- is.na(ozone)
ozne_notbad <- ozone[!bad]
ozne_notbad
ozone
ozone <- data1[, 1]
bad <- is.na(ozone)
not_bad <- ozone[!bad]
not_bad
length(not_bad)
mean(not_bad    )
data2 <- subset(data1, data1[,1]>30)
data2
data2 <- subset(data1, data1[,1]>31, data1[, 4]>90)
data2 <- subset(data1, data1[,1]>31, data1[,4]>90)
data2 <- subset(data1, data1[,1]>31)
data2 <- subset(data2, data2[,4]>90)
data2
mean(data2$Solar.R)
data3 <- subset(data1, data1[, 5]==6)
data3
mean(data3$Temp)
data4 <- subset(data1, data1[, 5]==)
data4 <- subset(data1, data1[, 5]==5)
data4
max(data4$Ozone)
subset(data4, data4[,1]!=NA)
data1 <- subset(data4, data4[,1]!=NA)
data1
data1 = read.csv("hw1_data.csv")
data4 <- subset(data1, data1[, 5]==5)
data4
good <- complete.cases(data4[,1])
data4 <- data4[good]
good
data5 <- data4[,1][good]
data5
max(data5)
