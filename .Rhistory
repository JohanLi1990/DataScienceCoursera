library("rpart", lib.loc="/usr/lib/R/library")
library("splines", lib.loc="/usr/lib/R/library")
library("parallel", lib.loc="/usr/lib/R/library")
install.packages("slidify")
library(ggplot2)
installed.packages("ggplot1")
installed.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages(plyr)
install.packages("plyr")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(te)
install.packages("curl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
x<-1
x
msg<- "hello"
msg
x<- 5## comments to the e
x
print(x)
x<-1:20
x
x[2]
[]5
x<-char(5)
attributes(x)
attributes(5)
x = c(1, 2, 3)
x[1]
x(1)
attributes(x)
attributes(obj = char)
attributes(obj = x)
attributes(obj)
attributes(msg)
x<-vector("numeric", 10)
x
x<-c(1.7, "a")
x
x<-c(True, 2)
x<-c(TRUE, 2)
x
x<-c("a", TRUE)
x
x<-0:6
class(x)
as.numeric(x)
x
as.logical(x)
as.character(x)
x
x<-c("a", "b","v")
x
as
m<-1:10
m
dim(m)<-c(2,5)
m
dim(n)<-c(5,2)
dim(m)<-c(5,2)
m
x<-1:3
y<-10:12
a = cbind(x,y)
a
b = rbind(x,y)
b
x<- factor(c("yes", "yes", "no"))
x
table(x)
unclass(x)
nan(X)
nan()
x<-Nan
x <- NaN
x
x <-1
x
x <- c(1,2,NA, 10, 4)
x
is.na((x))
is.na(x)
## vector of true indicate where missing value is
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
names(x)
x <- list(a =1 , b = 2, c= 3)
x
m <-matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "n"), c("e", "f"))
m
y <- data.frame(a = 1, b = "a")
dput(y)
con <- url("http://www.hoopchina.com", "r")
x <- readLines(con)
head(x)
p(x)
body(x)
c <- matrix(1:6, 2, 3)
c
x[1,2]
c[1,2]
x <- list(aardvark = 1:5)
x
x$aardvark
x$a
y <- list(aardvark =1:3, bread = 2:4)
y$b
y$aardvark
x <- c(1, 2, NA, 3, NA, 5)
bad <- is.na(x)
bad
x[!bad]
help("complete.cases")
x <- c(1, 2, NA, 4, NA, 5)
x <- c("a", "b", NA, "d", NA, "f")
y <- c(1, 2, NA, 4, NA, 5)
y <- c(1, 2, 3, 4, NA, 5)
good <- complete.cases(x, y)
good
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
x <- c("a", "b", "c", "d", NA, "f")
good <- complete.cases(x, y)
good
factor <- gl(3, 10)
length(factor)
factor(3)
library(swirl)
rm(list = ls())
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
load("~/Documents/DataScienceCoursera/.RData")
setwd("~/Documents/DataScienceCoursera")
library(dataset)
library(datasets)
with(airquality, plot(wind, ozone))
with(airquality, plot(Wind, Ozone))
air1 <- transform(airquality, Month = factor(Month))
air2 <- airquality
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NeYork Sity"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NeYork Sity", type = "n"))
with(airquality, plot(Wind, Ozone, main = "Ozone and wind shit", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 2)
abline(model, lwd = 2, col = "blue")
par(mfrow = c(1, 2))
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wnd"), plot(Solar.R, Ozone, main = "Ozone and Solar Rad")})
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wnd") plot(Solar.R, Ozone, main = "Ozone and Solar Rad")})
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wnd") plot(Solar.R, Ozone, main = "Ozone and Solar Rad")})
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wnd")      plot(Solar.R, Ozone, main = "Ozone and Solar Rad")})
with(airquality, {plot(Wind, Ozone, main = "Ozone and Wnd")plot(Solar.R, Ozone, main = "Ozone and Solar Rad")})
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wnd")
plot(Solar.R, Ozone, main = "Ozone and Solar Rad")
})
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wnd")
plot(Solar.R, Ozone, main = "Ozone and Solar Rad")
})
par(mfrow = c(1, 2))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wnd")
plot(Solar.R, Ozone, main = "Ozone and Solar Rad")
})
par(mfrow = c(1, 2)
oma = c(0, 0, 2, 0)
mar = c(4, 4, 2, 1))
par(mfrow = c(1, 2)
oma = c(0, 0, 2, 0)
mar = c(4, 4, 2, 1))
par(mfrow = c(1, 2),
oma = c(0, 0, 2, 0),
mar = c(4, 4, 2, 1))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wnd")
plot(Solar.R, Ozone, main = "Ozone and Solar Rad")
})
graphics.off()
x <- rnomr(100)
x <- rnom(100)
x <- rnorm(100)
plot(hist(x))
y <- rnorm(100)
plot(x, y)
par(mar = c(2, 2, 2, 2))
plot(x, y)
par(mar = c(4, 4, 2, 2))
plot(x, y)
example(points)
example(points)
g <- gl(2, 5-, label = c("m" "f"))
g <- gl(2, 5, label = c("m" "f"))
g <- gl(2, 5, Label = c("m" "f"))
g <- gl(2, 5, labels = c("m" "f"))
g <- gl(2, 50, labels = c("m" "f"))
g <- gl(2, 50)
g[2]
[27]
g[27]
g[40]
g[[1]]
g$2
g[fact == 2]
g[factpr == 2]
g[factor == 2]
g[factor == 1]
g
g <- gl(2, 50, labels = c("MALE", "FAMELE"))
g["FAMELE"]
g[factor=="FAMELE"]
g[["MALE"]]
g["MALE"]
g("male")
g
g[50]
g[level = "MALE"]
table(g)
c <- g == "MALE"
c
?Device
?Devices
with(faithful, plot(eruptions, waiting, main = "Eruption"))
